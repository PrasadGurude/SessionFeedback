// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMS
enum QuestionType {
  TEXT
  YES_NO
  RATING
}

// MODELS
model Admin {
  id           String      @id @default(uuid())
  name         String
  email        String      @unique
  password     String
  createdAt    DateTime    @default(now())
  mobileNumber String?
  bio          String?
  sessions     Session[]
  contacts     Contacted[]  // ðŸ”— New relation to Contacted
}

model Session {
  id          String     @id @default(uuid())
  title       String
  description String
  date        DateTime
  createdAt   DateTime   @default(now())
  adminId     String
  admin       Admin      @relation(fields: [adminId], references: [id])
  questions   Question[]
  responses   FeedbackResponse[]
}

model Question {
  id         String       @id @default(uuid())
  text       String
  type       QuestionType
  isRequired Boolean      @default(true)
  sessionId  String
  session    Session      @relation(fields: [sessionId], references: [id])
  answers    Answer[]
}

model FeedbackResponse {
  id         String    @id @default(uuid())
  sessionId  String
  createdAt  DateTime  @default(now())
  session    Session   @relation(fields: [sessionId], references: [id])
  answers    Answer[]
}

model Answer {
  id             String            @id @default(uuid())
  questionId     String
  feedbackId     String
  question       Question          @relation(fields: [questionId], references: [id])
  feedback       FeedbackResponse  @relation(fields: [feedbackId], references: [id])
  responseText   String?           // For TEXT
  selectedOption Boolean?          // For YES_NO (true or false)
  rating         Int?              // For RATING (integer answer)
}

// âœ… FINAL CONTACTED MODEL
model Contacted {
  id          String   @id @default(uuid())
  name        String
  email       String
  mobile      String
  description String
  createdAt   DateTime @default(now())
  adminId     String
  admin       Admin    @relation(fields: [adminId], references: [id])
}
